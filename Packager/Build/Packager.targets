<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="Tasks\ClearDirectory.targets" />
	<Import Project="Tasks\RemoveDirectory.targets" />
	<Import Project="Tasks\ReplaceToken.targets" />
	<Import Project="Tasks\TargetMessage.targets" />


	<PropertyGroup>
		<TemporaryDirectory>$(TargetDir)Temporary\</TemporaryDirectory>
	</PropertyGroup>
	<PropertyGroup>
		<AfterBuildDependsOn>
			<!--ClearTargetDirectory;-->
			CreateTemporaryDirectory;
			CreateNuspec;
			<!--
			CreateBuildFiles;
			CreateNuGetPackages;-->
			<!--Cleanup-->
		</AfterBuildDependsOn>
	</PropertyGroup>
	<Target
		Name="AfterBuild"
		DependsOnTargets="$(AfterBuildDependsOn)"
	/>
	<PropertyGroup>
		<CleanupDependsOn>
			BeforeCleanup;
			CoreCleanup;
			RemoveTemporaryDirectory;
			AfterCleanup
		</CleanupDependsOn>
		<CoreCleanupDependsOn />
	</PropertyGroup>
	<Target Name="AfterCleanup" />
	<Target Name="BeforeCleanup" />
	<Target
		Name="CoreCleanup"
		DependsOnTargets="$(CoreCleanupDependsOn)"
	>
		<TargetMessage
			TargetName="CoreCleanup"
			Importance="$(MessageImportance)"
		/>
		<TargetMessage
			Condition="Exists($(TargetPath))"
			TargetName="CoreCleanup"
			Importance="$(MessageImportance)"
			Text="Deleting '$(TargetPath)'."
		/>
		<Delete
			Condition="Exists($(TargetPath))"
			Files="$(TargetPath)"
		/>
	</Target>
	<Target
		Name="Cleanup"
		DependsOnTargets="$(CleanupDependsOn)"
	/>
	<Target Name="ClearTargetDirectory">
		<ClearDirectory
			DirectoryPath="$(TargetDir)"
			LogImportance="$(MessageImportance)"
			TargetName="ClearTargetDirectory"
		/>
	</Target>
	<PropertyGroup>
		<CreateApplicationFilesNuspecDependsOn>
			BeforeCreateApplicationFilesNuspec;
			CoreCreateApplicationFilesNuspec;
			AfterCreateApplicationFilesNuspec
		</CreateApplicationFilesNuspecDependsOn>
		<CoreCreateApplicationFilesNuspecDependsOn />
	</PropertyGroup>
	<Target Name="AfterCreateApplicationFilesNuspec" />
	<Target Name="BeforeCreateApplicationFilesNuspec" />
	<Target
		Name="CoreCreateApplicationFilesNuspec"
		DependsOnTargets="$(CoreCreateApplicationFilesNuspecDependsOn)"
	>
		<CreateApplicationFilesNugetSpecification
			OutputDirectory="$(TemporaryDirectory)"
			PackageName="$(ApplicationFilesPackageName)"
			PackageVersion="@(ApplicationFilesPackageVersion)"
			EPiServerDirectory="$(EPiServerDirectory)"
			NuGetSpecificationTemplate=".nuspec\HansKindberg-EPiServer-NuGet-Packages.nuspec"
			DefaultNuGetSpecificationTransformers="$(ApplicationFilesNuspecTransformers)"
			LogImportance="$(MessageImportance)"
			TargetName="CoreCreateApplicationFilesNuspec"
		/>
		
		
	
		<!--		
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateApplicationFilesNuspec': Creating '$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec' for 'Application-Files' package '%(ApplicationFilesPackageVersion.Identity)'."
		/>
		<Message
			Condition="!Exists('$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateApplicationFilesNuspec': The 'Application-Files' package '%(ApplicationFilesPackageVersion.Identity)' will not be created. The folder '$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)' does not exist."
		/>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateApplicationFilesNuspec': Copying '.nuspec\HansKindberg-EPiServer-NuGet-Packages.nuspec' to '$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec'."
		/>
		<Copy
			Condition="Exists('$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)')"
			DestinationFiles="$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec"
			SourceFiles=".nuspec\HansKindberg-EPiServer-NuGet-Packages.nuspec"
		/>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateApplicationFilesNuspec': Transforming '$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec' with '.nuspec\EPiServer-Transform.nuspec' to '$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec'."
		/>
		<TransformXml
			Condition="Exists('$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)')"
			Destination="$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec"
			Source="$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec"
			Transform=".nuspec\EPiServer-Transform.nuspec"
		/>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateApplicationFilesNuspec': Transforming '$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec' with '.nuspec\Application-Files-Transform.nuspec' to '$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec'."
		/>
		<TransformXml
			Condition="Exists('$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)')"
			Destination="$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec"
			Source="$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec"
			Transform=".nuspec\Application-Files-Transform.nuspec"
		/>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)') AND %(ApplicationFilesPackageVersion.NuspecFilesTransform) != ''"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateApplicationFilesNuspec': Transforming '$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec' with '%(ApplicationFilesPackageVersion.NuspecFilesTransform)' to '$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec'."
		/>
		<TransformXml
			Condition="Exists('$(EPiServerDirectory)CMS\%(ApplicationFilesPackageVersion.EPiServerVersion)') AND %(ApplicationFilesPackageVersion.NuspecFilesTransform) != ''"
			Destination="$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec"
			Source="$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec"
			Transform="%(ApplicationFilesPackageVersion.NuspecFilesTransform)"
		/>
		-->
	</Target>
	<Target
		Name="CreateApplicationFilesNuspec"
		DependsOnTargets="$(CreateApplicationFilesNuspecDependsOn)"
	/>
	<PropertyGroup>
		<CreateBinariesNuspecDependsOn>
			BeforeCreateBinariesNuspec;
			CoreCreateBinariesNuspec;
			AfterCreateBinariesNuspec
		</CreateBinariesNuspecDependsOn>
		<CoreCreateBinariesNuspecDependsOn />
	</PropertyGroup>
	<Target Name="AfterCreateBinariesNuspec" />
	<Target Name="BeforeCreateBinariesNuspec" />
	<Target
		Name="CoreCreateBinariesNuspec"
		DependsOnTargets="$(CoreCreateBinariesNuspecDependsOn)"
	>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)'))"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBinariesNuspec': Creating '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec' for 'Binaries' package '%(BinariesPackageVersion.Identity)'."
		/>
		<Message
			Condition="!Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBinariesNuspec': The 'Binaries' package '%(BinariesPackageVersion.Identity)' will not be created. The folder '$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)' does not exist."
		/>
		<Message
			Condition="%(BinariesPackageVersion.EPiServerFrameworkVersion) != '' AND !Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBinariesNuspec': The 'Binaries' package '%(BinariesPackageVersion.Identity)' will not be created. The folder '$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)' does not exist."
		/>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)'))"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBinariesNuspec': Copying '.nuspec\HansKindberg-EPiServer-NuGet-Packages.nuspec' to '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec'."
		/>
		<Copy
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)'))"
			DestinationFiles="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			SourceFiles=".nuspec\HansKindberg-EPiServer-NuGet-Packages.nuspec"
		/>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)'))"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBinariesNuspec': Transforming '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec' with '.nuspec\EPiServer-Transform.nuspec' to '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec'."
		/>
		<TransformXml
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)'))"
			Destination="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			Source="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			Transform=".nuspec\EPiServer-Transform.nuspec"
		/>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)'))"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBinariesNuspec': Transforming '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec' with '.nuspec\Binaries-Transform.nuspec' to '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec'."
		/>
		<TransformXml
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)'))"
			Destination="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			Source="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			Transform=".nuspec\Binaries-Transform.nuspec"
		/>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)')) AND %(BinariesPackageVersion.NuspecTransformers) != ''"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBinariesNuspec': Transforming '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec' with '%(BinariesPackageVersion.NuspecTransformers)' to '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec'."
		/>
		<TransformXml
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)')) AND %(BinariesPackageVersion.NuspecTransformers) != ''"
			Destination="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			Source="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			Transform="%(BinariesPackageVersion.NuspecTransformers)"
		/>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)')) AND %(BinariesPackageVersion.NuspecTransformers) != ''"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBinariesNuspec': Transforming '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec' with '%(BinariesPackageVersion.NuspecTransformers)' to '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec'."
		/>
		<TransformXml
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)')) AND %(BinariesPackageVersion.NuspecTransformers) != ''"
			Destination="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			Source="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			Transform="%(BinariesPackageVersion.NuspecTransformers)"
		/>
		<Message
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)')) AND %(BinariesPackageVersion.NuspecTransformers) != ''"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBinariesNuspec': Transforming '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec' with '%(BinariesPackageVersion.NuspecTransformers)' to '$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec'."
		/>
		<TransformXml
			Condition="Exists('$(EPiServerDirectory)CMS\%(BinariesPackageVersion.EPiServerVersion)') AND (%(BinariesPackageVersion.EPiServerFrameworkVersion) == '' OR Exists('$(EPiServerDirectory)Framework\%(BinariesPackageVersion.EPiServerFrameworkVersion)')) AND %(BinariesPackageVersion.NuspecTransformers) != ''"
			Destination="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			Source="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			Transform="%(BinariesPackageVersion.NuspecTransformers)"
		/>
	</Target>
	<Target
		Name="CreateBinariesNuspec"
		DependsOnTargets="$(CreateBinariesNuspecDependsOn)"
	/>
	<PropertyGroup>
		<CreateBuildFilesDependsOn>
			BeforeCreateBuildFiles;
			CoreCreateBuildFiles;
			AfterCreateBuildFiles
		</CreateBuildFilesDependsOn>
		<CoreCreateBuildFilesDependsOn />
	</PropertyGroup>
	<Target Name="AfterCreateBuildFiles" />
	<Target Name="BeforeCreateBuildFiles" />
	<Target
		Name="CoreCreateBuildFiles"
		DependsOnTargets="$(CoreCreateBuildFilesDependsOn)"
	>
		<Message
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBuildFiles'."
		/>
		<Message
			Importance="$(MessageImportance)"
			Text="Target 'CreateBuildFiles': Creating file '$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props'"
		/>
		<Copy
			DestinationFiles="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			SourceFiles="Build\Packages\Build-Transform.props"
		/>
		<ReplaceToken
			DestinationFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Replacement="$(ApplicationFilesPackageName)"
			SourceFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Token="${ApplicationFilesPackageName}"
		/>
		<ReplaceToken
			DestinationFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Replacement="%(BuildPackageVersion.ApplicationFilesPackageVersion)"
			SourceFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Token="${ApplicationFilesPackageVersion}"
		/>
		<ReplaceToken
			DestinationFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Replacement="$(BinariesPackageName)"
			SourceFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Token="${BinariesPackageName}"
		/>
		<ReplaceToken
			DestinationFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Replacement="%(BuildPackageVersion.BinariesPackageVersion)"
			SourceFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Token="${BinariesPackageVersion}"
		/>
		<ReplaceToken
			DestinationFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Replacement="%(BuildPackageVersion.PackageBinariesDirectories)"
			SourceFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Token="${PackageBinariesDirectories}"
		/>
		<ReplaceToken
			DestinationFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Replacement="$(PackageMessageImportance)"
			SourceFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Token="${MessageImportance}"
		/>
		<ReplaceToken
			DestinationFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Replacement="$(NuGetPackageDirectoryName)"
			SourceFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Token="${NuGetPackageDirectoryName}"
		/>
		<ReplaceToken
			DestinationFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Replacement="%(BuildPackageVersion.DependencyBinariesDirectories)"
			SourceFilePath="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
			Token="${DependencyBinariesDirectories}"
		/>
		<Message
			Importance="$(MessageImportance)"
			Text="Target 'CreateBuildFiles': Transforming 'Build\HansKindberg-Xml-Transformation\HansKindberg-Xml-Transformation.props' with '$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props' to '$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).props'"
		/>
		<TransformXml
			Destination="$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).props"
			Source="Build\HansKindberg-Xml-Transformation\HansKindberg-Xml-Transformation.props"
			Transform="$(TemporaryDirectory)Build-Transform.%(BuildPackageVersion.Identity).props"
		/>
		<Message
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBuildFiles': Transforming 'Build\HansKindberg-Xml-Transformation\HansKindberg-Xml-Transformation.targets' with 'Build\Packages\Build-Transform.targets' to '$(TemporaryDirectory)$(BuildPackageName).targets'"
		/>
		<TransformXml
			Destination="$(TemporaryDirectory)$(BuildPackageName).targets"
			Source="Build\HansKindberg-Xml-Transformation\HansKindberg-Xml-Transformation.targets"
			Transform="Build\Packages\Build-Transform.targets"
		/>
	</Target>
	<Target
		Name="CreateBuildFiles"
		DependsOnTargets="$(CreateBuildFilesDependsOn)"
	/>
	<PropertyGroup>
		<CreateBuildNuspecDependsOn>
			BeforeCreateBuildNuspec;
			CoreCreateBuildNuspec;
			AfterCreateBuildNuspec
		</CreateBuildNuspecDependsOn>
		<CoreCreateBuildNuspecDependsOn />
	</PropertyGroup>
	<Target Name="AfterCreateBuildNuspec" />
	<Target Name="BeforeCreateBuildNuspec" />
	<Target
		Name="CoreCreateBuildNuspec"
		DependsOnTargets="$(CoreCreateBuildNuspecDependsOn)"
	>
		<Message
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBuildNuspec': Creating '$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec' for 'Build' package '%(BuildPackageVersion.Identity)'."
		/>
		<Message
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBuildNuspec': Copying '.nuspec\HansKindberg-EPiServer-NuGet-Packages.nuspec' to '$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec'."
		/>
		<Copy
			DestinationFiles="$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec"
			SourceFiles=".nuspec\HansKindberg-EPiServer-NuGet-Packages.nuspec"
		/>
		<Message
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateBuildNuspec': Transforming '$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec' with '.nuspec\Build-Transform.nuspec' to '$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec'."
		/>
		<TransformXml
			Destination="$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec"
			Source="$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec"
			Transform=".nuspec\Build-Transform.nuspec"
		/>
	</Target>
	<Target
		Name="CreateBuildNuspec"
		DependsOnTargets="$(CreateBuildNuspecDependsOn)"
	/>
	<PropertyGroup>
		<CreateNuGetPackagesDependsOn>
			BeforeCreateNuGetPackages;
			CoreCreateNuGetPackages;
			AfterCreateNuGetPackages
		</CreateNuGetPackagesDependsOn>
		<CoreCreateNuGetPackagesDependsOn />
	</PropertyGroup>
	<Target Name="AfterCreateNuGetPackages" />
	<Target Name="BeforeCreateNuGetPackages" />
	<Target
		Name="CoreCreateNuGetPackages"
		DependsOnTargets="$(CoreCreateNuGetPackagesDependsOn)"
	>
		<Message
			Condition="Exists('$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateNuGetPackages': Packing '$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity)'."
		/>
		<Message
			Condition="Exists('$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateNuGetPackages': Executes task 'NuGetPack' with properties = 'Id=$(ApplicationFilesPackageName);Version=%(ApplicationFilesPackageVersion.Identity);BinariesPackageId=$(BinariesPackageName);BinariesPackageVersion=%(ApplicationFilesPackageVersion.BinariesPackageVersion);ConfigurationVersion=%(ApplicationFilesPackageVersion.ConfigurationVersion);EPiServerDirectory=$(EPiServerDirectory);EPiServerVersion=%(ApplicationFilesPackageVersion.EPiServerVersion);ProjectDirectory=$(ProjectDir);TemporaryDirectory=$(TemporaryDirectory)'."
		/>
		<NuGetPack
			Condition="Exists('$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec')"
			File="$(TemporaryDirectory)$(ApplicationFilesPackageName).%(ApplicationFilesPackageVersion.Identity).nuspec"
			OutputDirectory="$(TargetDir)"
			Properties="Id=$(ApplicationFilesPackageName);Version=%(ApplicationFilesPackageVersion.Identity);BinariesPackageId=$(BinariesPackageName);BinariesPackageVersion=%(ApplicationFilesPackageVersion.BinariesPackageVersion);ConfigurationVersion=%(ApplicationFilesPackageVersion.ConfigurationVersion);EPiServerDirectory=$(EPiServerDirectory);EPiServerVersion=%(ApplicationFilesPackageVersion.EPiServerVersion);ProjectDirectory=$(ProjectDir);TemporaryDirectory=$(TemporaryDirectory)"
			ToolPath="$(SolutionDir).nuget"
		/>
		<Message
			Condition="Exists('$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateNuGetPackages': Packing '$(BinariesPackageName).%(BinariesPackageVersion.Identity)'."
		/>
		<Message
			Condition="Exists('$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateNuGetPackages': Executes task 'NuGetPack' with properties = 'Id=$(BinariesPackageName);Version=%(BinariesPackageVersion.Identity);EPiServerDirectory=$(EPiServerDirectory);EPiServerFrameworkVersion=%(BinariesPackageVersion.EPiServerFrameworkVersion);EPiServerVersion=%(BinariesPackageVersion.EPiServerVersion);ProjectDirectory=$(ProjectDir)'."
		/>
		<NuGetPack
			Condition="Exists('$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec')"
			File="$(TemporaryDirectory)$(BinariesPackageName).%(BinariesPackageVersion.Identity).nuspec"
			OutputDirectory="$(TargetDir)"
			Properties="Id=$(BinariesPackageName);Version=%(BinariesPackageVersion.Identity);EPiServerDirectory=$(EPiServerDirectory);EPiServerFrameworkVersion=%(BinariesPackageVersion.EPiServerFrameworkVersion);EPiServerVersion=%(BinariesPackageVersion.EPiServerVersion);ProjectDirectory=$(ProjectDir)"
			ToolPath="$(SolutionDir).nuget"
		/>
		<Message
			Condition="Exists('$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateNuGetPackages': Packing '$(BuildPackageName).%(BuildPackageVersion.Identity)'."
		/>
		<Message
			Condition="Exists('$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec')"
			Importance="$(MessageImportance)"
			Text="Target 'CoreCreateNuGetPackages': Executes task 'NuGetPack' with properties = 'Id=$(BuildPackageName);Version=%(BuildPackageVersion.Identity);ApplicationFilesPackageId=$(ApplicationFilesPackageName);ApplicationFilesPackageVersion=%(BuildPackageVersion.ApplicationFilesPackageVersion);EPiServerVersion=%(BuildPackageVersion.EPiServerVersion);ProjectDirectory=$(ProjectDir);TemporaryDirectory=$(TemporaryDirectory)'."
		/>
		<NuGetPack
			Condition="Exists('$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec')"
			File="$(TemporaryDirectory)$(BuildPackageName).%(BuildPackageVersion.Identity).nuspec"
			OutputDirectory="$(TargetDir)"
			Properties="Id=$(BuildPackageName);Version=%(BuildPackageVersion.Identity);ApplicationFilesPackageId=$(ApplicationFilesPackageName);ApplicationFilesPackageVersion=%(BuildPackageVersion.ApplicationFilesPackageVersion);EPiServerVersion=%(BuildPackageVersion.EPiServerVersion);ProjectDirectory=$(ProjectDir);TemporaryDirectory=$(TemporaryDirectory)"
			ToolPath="$(SolutionDir).nuget"
		/>
	</Target>
	<Target
		Name="CreateNuGetPackages"
		DependsOnTargets="$(CreateNuGetPackagesDependsOn)"
	/>
	<PropertyGroup>
		<CreateNuspecDependsOn>
			BeforeCreateNuspec;
			CreateApplicationFilesNuspec;
			<!--
			CreateBinariesNuspec;
			CreateBuildNuspec;
			-->
			AfterCreateNuspec
		</CreateNuspecDependsOn>
	</PropertyGroup>
	<Target Name="AfterCreateNuspec" />
	<Target Name="BeforeCreateNuspec" />
	<Target
		Name="CreateNuspec"
		DependsOnTargets="$(CreateNuspecDependsOn)"
	/>
	<Target Name="CreateTemporaryDirectory">
		<TargetMessage
			TargetName="CreateTemporaryDirectory"
			Importance="$(MessageImportance)"
		/>
		<TargetMessage
			Condition="!Exists($(TemporaryDirectory))"
			TargetName="CreateTemporaryDirectory"
			Importance="$(MessageImportance)"
			Text="Creating directory '$(TemporaryDirectory)'."
		/>
		<MakeDir
			Condition="!Exists($(TemporaryDirectory))"
			Directories="$(TemporaryDirectory)"
		/>
	</Target>
	<Target Name="RemoveTemporaryDirectory">
		<RemoveDirectory
			DirectoryPath="$(TemporaryDirectory)"
			LogImportance="$(MessageImportance)"
			TargetName="RemoveTemporaryDirectory"
		/>
	</Target>
</Project>