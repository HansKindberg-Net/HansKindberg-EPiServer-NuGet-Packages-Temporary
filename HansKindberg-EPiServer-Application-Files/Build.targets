<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Target Name="BeforeBuild">
		<Message
			Importance="$(MessageImportance)"
			Text="Clearing target directory ('$(TargetDir)')."
		/>
		<ItemGroup>
			<File Include="$(TargetDir)**\*.*" />
		</ItemGroup>
		<Delete Files="@(File)" />
		<DeleteTree
			Condition="Exists($(TargetDir))"
			Directories="$(TargetDir)**"
			Recursive="true"
		/>
	</Target>
	<PropertyGroup>
		<AfterBuildDependsOn>
			CreatePackage
		</AfterBuildDependsOn>
	</PropertyGroup>
	<Target
		Name="AfterBuild"
		DependsOnTargets="$(AfterBuildDependsOn)"
	>
		<Message
			Condition="!Exists($(EPiServerCmsVersionDirectory))"
			Importance="$(MessageImportance)"
			Text="The package was not built. The directory '$(EPiServerCmsVersionDirectory)' does not exist."
		/>
		<Message
			Condition="Exists($(TargetPath))"
			Importance="$(MessageImportance)"
			Text="Deleting '$(TargetPath)'"
		/>
		<Delete
			Condition="Exists($(TargetPath))"
			Files="$(TargetPath)"
		/>
	</Target>
	<Target
		Name="CreatePackage"
		Condition="Exists($(EPiServerCmsVersionDirectory))"
	>
		<Message
			Condition="Exists($(NuGetPackagesDirectory))"
			Importance="$(MessageImportance)"
			Text="Clearing NuGet-packages directory '$(NuGetPackagesDirectory)'."
		/>
		<ItemGroup Condition="Exists($(NuGetPackagesDirectory))">
			<CurrentPackageFile Include="$(NuGetPackagesDirectory)**\*.*" />
		</ItemGroup>
		<Delete
			Condition="Exists($(NuGetPackagesDirectory))"
			Files="@(CurrentPackageFile)"
		/>
		<DeleteTree
			Condition="Exists($(NuGetPackagesDirectory))"
			Directories="$(NuGetPackagesDirectory)**"
			Recursive="true"
		/>
		<Message
			Condition="!Exists($(NuGetPackagesDirectory))"
			Importance="$(MessageImportance)"
			Text="Creating NuGet-packages directory '$(NuGetPackagesDirectory)'."
		/>
		<MakeDir
			Condition="!Exists($(NuGetPackagesDirectory))"
			Directories="$(NuGetPackagesDirectory)"
		/>
		<Message
			Importance="$(MessageImportance)"
			Text="Copying package to '$(NuGetPackagesDirectory)'."
		/>
		<ItemGroup>
			<ApplicationFile Include="$(EPiServerApplicationFilesSearchPattern)" />
		</ItemGroup>
		<Copy
			DestinationFiles="@(ApplicationFile->'$(NuGetPackagesDirectory)$(EPiServerApplicationFilesTarget)\%(RecursiveDir)%(Filename)%(Extension)')"
			SourceFiles="@(ApplicationFile)"
		/>
		<ItemGroup>
			<ConfigurationFile Include="$(ConfigurationFilesSearchPattern)" />
		</ItemGroup>
		<Copy
			DestinationFiles="@(ConfigurationFile->'$(NuGetPackagesDirectory)$(ConfigurationFilesTarget)\%(RecursiveDir)%(Filename)%(Extension)')"
			SourceFiles="@(ConfigurationFile)"
		/>
		<Copy
			DestinationFolder="$(NuGetPackagesDirectory)"
			SourceFiles="$(ReadMeFile)"
		/>
		<PropertyGroup>
			<Properties>Author=$(Author)</Properties>
			<Properties>$(Properties);ConfigurationFilesSearchPattern=$(ConfigurationFilesSearchPattern)</Properties>
			<Properties>$(Properties);ConfigurationFilesTarget=$(ConfigurationFilesTarget)</Properties>
			<Properties>$(Properties);EPiServerApplicationFilesSearchPattern=$(EPiServerApplicationFilesSearchPattern)</Properties>
			<Properties>$(Properties);EPiServerApplicationFilesTarget=$(EPiServerApplicationFilesTarget)</Properties>
			<Properties>$(Properties);EPiServerVersion=$(EPiServerVersion)</Properties>
			<Properties>$(Properties);Id=$(Name)</Properties>
			<Properties>$(Properties);ReadMeFile=$(ReadMeFile)</Properties>
			<Properties>$(Properties);Version=$(Version)</Properties>
		</PropertyGroup>
		<Message
			Condition="$(Configuration) == 'Release'"
			Importance="$(MessageImportance)"
			Text="Creating NuGet package - properties = '$(Properties)'."
		/>
		<NuGetPack
			Condition="$(Configuration) == 'Release'"
			File="$(Name).nuspec"
			OutputDirectory="$(TargetDir)"
			Properties="$(Properties)"
			ToolPath="$(SolutionDir).nuget"
			Verbosity="$(NuGetVerbosity)"
		/>
	</Target>
</Project>